@page "/customers"
@inject BobCrm.App.Services.AuthService Auth
@inject NavigationManager Nav
@inject IJSRuntime JS

<h1>客户列表</h1>

<Input Placeholder="搜索名称/编码" @bind-Value="keyword" Style="max-width:260px;margin-bottom:12px" />

<Table TItem="CustomerItem" DataSource="filtered" RowKey="@(c => c.id)" Size="TableSize.Middle">
    <Column TData="CustomerItem" Title="编码" Field="c => c.code" />
    <Column TData="CustomerItem" Title="名称" Field="c => c.name" />
    <Column TData="CustomerItem" Title="操作">
        <Template Context="c">
            <Button Type="ButtonType.Link" OnClick="() => OpenDetail(c.id)">详情</Button>
        </Template>
    </Column>
</Table>

@if (error is not null)
{
    <Alert Message="@error" Type="AlertType.Error" ShowIcon="true" />
}

@code {
    private List<CustomerItem> data = new();
    private string keyword = string.Empty;
    private string? error;

    private IEnumerable<CustomerItem> filtered => string.IsNullOrWhiteSpace(keyword)
        ? data : data.Where(x => (x.name ?? "").Contains(keyword, StringComparison.OrdinalIgnoreCase) || (x.code ?? "").Contains(keyword, StringComparison.OrdinalIgnoreCase));

    protected override async Task OnInitializedAsync()
    {
        // simple auth guard
        var token = await JS.InvokeAsync<string?>("localStorage.getItem", "accessToken");
        if (string.IsNullOrWhiteSpace(token)) { Nav.NavigateTo("/login"); return; }

        var resp = await Auth.GetWithRefreshAsync("/api/customers");
        if (!resp.IsSuccessStatusCode)
        {
            error = $"加载失败: {(int)resp.StatusCode}"; return;
        }
        var json = await resp.Content.ReadFromJsonAsync<List<CustomerItem>>();
        data = json ?? new();
    }

    private void OpenDetail(int id) => Nav.NavigateTo($"/customers/{id}");

    public class CustomerItem
    {
        public int id { get; set; }
        public string? code { get; set; }
        public string? name { get; set; }
    }
}
